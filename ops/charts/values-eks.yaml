applicationName: website

containerImage:
  pullPolicy: Always
  repository: @@IMAGE_REPOSITORY@@
  tag: @@IMAGE_TAG@@

containerPorts:
  http:
    port: 80
    protocol: TCP
  liveness:
    port: 80
    protocol: TCP
  readiness:
    port: 80
    protocol: TCP

livenessProbe:
  httpGet:
    path: /
    port: liveness
    scheme: HTTP
  initialDelaySeconds: 15
  periodSeconds: 30

readinessProbe:
  httpGet:
    path: /
    port: readiness
    scheme: HTTP
  initialDelaySeconds: 15
  periodSeconds: 30

replicaCount: @@REPLICA_COUNT@@

ingress:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: @@SSL_CERT_ARN@@
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/healthcheck-path: '/'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/group.name: 'frontends'
    external-dns.alpha.kubernetes.io/alias: "true"
    external-dns.alpha.kubernetes.io/target: @@CLOUDFRONT_DISTRIBUTION@@
    kubernetes.io/ingress.class: alb
  enabled: true
  hosts: @@HOSTS@@
  path: /*
  servicePort: app
  additionalPathsHigherPriority:
    - path: /*
      serviceName: ssl-redirect
      servicePort: use-annotation

service:
  enabled: true
  ports:
    app:
      port: 80
  type: NodePort
